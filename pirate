#!/bin/env bash

# -----------------------------------------------------------------------------------------------------------------------------
# GENERAL
# -----------------------------------------------------------------------------------------------------------------------------
#
# author: Sebastiaan Van Hoecke
# mail: sebastiaan@sevaho.io
#
# NOTE: 
#
# I did not write the regex, A couple of years ago I found them on github 
# but I can't find them again so if you know who is the legal owner please tell me
#
# -----------------------------------------------------------------------------------------------------------------------------

# -----------------------------------------------------------------------------------------------------------------------------
# VARIABLES
# -----------------------------------------------------------------------------------------------------------------------------

IFS=$'\n'
TPB="https://pirateproxy.cam"

numbcolor='\x1b[38;5;4m'
namecolor='\x1b[38;5;3m'
sizecolor='\x1b[38;5;5m'
seedcolor='\x1b[38;5;2m'
peercolor='\x1b[38;5;1m'
nonecolor='\x1b[0m'

# -----------------------------------------------------------------------------------------------------------------------------
# FUNCTIONS
# -----------------------------------------------------------------------------------------------------------------------------

get_url_source () {

    if [ -z "$query" ]; then

        while [[ $request == "" ]]; do

            request=$(curl -k -A Mozilla -b 'lw=s' -m $limit -s "$TPB/$url" \
            | grep -Eo '^<div class=\"detName\".*|^<a href="magnet.*|Size [0-9]*.[0.9]*|<td align=\"right\">[^<]*' \
            | tr -d '\t' \
            | sed 's!^<div class=\"detName\"><a href=\"/torrent/[^>]*>!!; s!</a>$!!;s!^<a href=\"!!; s!^<td [^>]*>!!; s!" title.*!!g; s/|/!/g ' \
            | sed  'N;N;N;N;s!\n!|!g')

            echo "."

        done

    else 

        echo "Searching for: $query"

	    url='search/'"$query"'/0/'"$order"'/0'

        while [[ $request == "" ]]; do

            request=`curl -k -A Mozilla -b "lw=s" -m $limit -s "$TPB/$url" \
            | grep -Eo '^<td><a href=\"/torrent/[^>]*>.*|^<td><nobr><a href=\"[^"]*|<td align=\"right\">[^<]*' \
            | sed  's!^<td><a href=\"/torrent/[^>]*>!!; \
                s!</a>$!!; \
                s!^<td><nobr><a href=\"!!; \
                s!^<td [^>]*>!!; \
                s!&nbsp;!\ !g; \
                s/|/!/g' \
            | sed  'N;N;N;N;s!\n!|!g'`

            echo "."

        done

    fi

}

download_torrent () {

    echo "$request" \
    | head -n "$limit" \
    | awk -v N=1 \
    -v NU="$numbcolor" \
    -v NA="$namecolor" \
    -v SI="$sizecolor" \
    -v SE="$seedcolor" \
    -v PE="$peercolor" \
    -v NO="$nonecolor" \
    -F '|' \
    '{print NU N ") " NA $1 " " SI $3 " " SE $4 " " PE $5 NO; N++}'

    read -p ">> Torrent to download (eg. 1 3 5 7): " selection

    magnet="`echo "$request" | awk -F '|' 'NR=='$selection'{print $2; exit}'`"

    # [ -f "/usr/sbin/xsel" ] && echo $magnet | xsel -b && echo "copied to clipboard"
    [ -f "/usr/sbin/rtorrent" ] && exec /usr/sbin/rtorrent $magnet

}

check_args () {

    if [[ "$#" -eq "0" ]]; then

        usage

    fi

    while getopts :smo:l: opt; do

        case $opt in

            l)  limit=$OPTARG;;
            o)  order=$OPTARG;;
            s)  url="top/205";;
            m)  url="top/201";;
            ?)  usage;; 

        esac

    done

    shift "$(expr $OPTIND - 1)"

    # query=`echo "$*" | tr -d '\n' | od -t x1 -A n | tr ' ' '%'`
    query=$*

}

usage () {

cat << _EOF_
Usage: ${0} [OPTIONS]... [ARGS]...

Very simple bash script to download any magnet link from the TPB and load them up in rtorrent.

OPTIONS: 
  
    -h, *           display the help and exit
    -m              Top movies
    -s              Top series
    -h              Usage
    -l <limit>      Size of the output list
    -o <order>      Order of your search query

                    1 - name ascending; 
                    2 - name descending;
                    3 - recent first; 
                    4 - oldest first;
                    5 - size descending; 
                    6 - size ascending;
                    7 - seeds descending; 
                    8 - seeds ascending;
                    9 - leechers descending; 
                    10 - leechers ascending;

EXAMPLES:
    
    pirate -l 60 -m
    pirate -l 10 -o 99 "legal movies"

_EOF_

exit 1

}

# -----------------------------------------------------------------------------------------------------------------------------
# MAIN
# -----------------------------------------------------------------------------------------------------------------------------

main () {

    local limit=50
    local order=7
    local url=
    local query=
    local request=
    local magnet=

    check_args "${@}"
    get_url_source
    download_torrent

}

main "${@}"

unset IFS
